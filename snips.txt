# Saving notes in LocalStorage Object

export default  {
	name: ‘App’,
	data: {
		title: ’Notes’,
		note: {
			text: null,
			date: null
		},
		notes: [{
			text: ‘Notes’,
			date: new  Date(Date.now()).toLocaleString()
		}],
	},
	methods: {
		addNote() {
			let { text, title } = this.note;
			if ( text === null ) {
				return;
			}
			this.notes.push({
				text,	 
				date: new Date(Date.now()).toLocaleString(),
			})
			this.note.text = null
		},
		removeNote(index) {
			this.$delete(this.notes, index)
		},
	},

	mounted() {
		this.$delete(this.notes, index)
	},
	watch: {
		notes: {
			handler() {
				localStorage.setItem(
					‘notes’,
					JSON.stringify(this.notes)
				);
			},
			deep: true,
		},
	},
}
================================================================
/** PEXELS - GET API */ 
// import { createClient } from 'pexels';
// const client = createClient('qkT13AZis6dFFtI3wyGmoDOoFa475suJt12Q7nhSF0Ynhp7OWqyytdvU');
// const query = 'Nature';
// const fetchData = onMounted(()=> {
//      client.photos.search({query, per_page: 20})
//      .then(photos => {
//         photoData.value = photos.photos;
//         console.log(photoData);
//      }).catch(error => {
//         console.log(error.message);
//      })
// })


################################################################
# OPTIONS:
export default {
    data(){
        return {
            newTodo: '',
            hideCompleted: false,
            storedTodos: JSON.parse(localStorage.getItem('storedTodos')) || []
        }
    },
    watch: {
        storedTodos: {  
            //  still in localStorage "sdfsdfsdf"
            handler(newTodos){
                localStorage.setItem('storedTodos', JSON.stringify(newTodos));
            },
            deep: true
        },
    },
    computed: {
        filteredTodos(){
            return this.hideCompleted ? 
            this.storedTodos.filter(t => !t.done): this.storedTodos; 
        },
        
    },
    methods: {
        addTodo(){
            // this.todos.push({id: id++, text: this.newTodo, done: false });
            // this.storeLocally(this.newTodo); 
            // this.newTodo = '';
            const newId = this.storedTodos.length > 0 ? this.storedTodos[this.storedTodos.length - 1].id + 1: 1;
            this.storedTodos.push({id: newId, text: this.newTodo, done: false});
            this.newTodo = '';
        },
        removeTodo(todo){
            this.storedTodos = this.storedTodos.filter(t => t !== todo);
        },
    }
}

# COMPOSITION: 
<script setup>
import { ref, watch } from 'vue'

const newTodo = ref('');
const hideCompleted = ref(false);
const storedTodos = ref(JSON.parse(localStorage.getItem('storedTodos')) || []);

watch(storedTodos, (newTodos) => {
    localStorage.setItem('storedTodos', JSON.stringify(newTodos));
}, { deep: true });

const addTodo = () => {
    const newId = storedTodos.value.length > 0 ? storedTodos.value[storedTodos.value.length - 1].id + 1 : 1;
    storedTodos.value.push({ id: newId, text: newTodo.value, done: false });
    newTodo.value = '';
};

const removeTodo = (todo) => {
    storedTodos.value = storedTodos.value.filter(t => t !== todo);
};

// Remember to export the variables and functions
export { newTodo, hideCompleted, storedTodos, addTodo, removeTodo };
</script>